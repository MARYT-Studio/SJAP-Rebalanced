apply from: 'gradle/scripts/helpers.gradle'

repositories {
    // Other repositories described by default:
    // CleanroomMC: https://maven.cleanroommc.com
    exclusiveContent {
        forRepository {
            maven {
                name 'CurseMaven'
                url 'https://cursemaven.com'
            }
        }
        filter {
            includeGroup 'curse.maven'
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name 'Modrinth'
                url 'https://api.modrinth.com/maven'
            }
        }
        filter {
            includeGroup 'maven.modrinth'
        }
    }
    maven {       //CraftTweaker
        url =  'https://maven.blamejared.com/'
    }
	maven {
        name = "CoFH Maven"
        url = "https://maven.covers1624.net"
    }
    maven {
        name = "Chickenbones maven"
        url = "https://chickenbones.net/maven/"
	}
	maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven"
	}

	maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
	}
    mavenLocal() // Must be last for caching to work
}

dependencies {
    // Include StripLatestForgeRequirements by default for the dev env, saves everyone a hassle
    runtimeOnly 'com.cleanroommc:strip-latest-forge-requirements:1.0'
    // Include OSXNarratorBlocker by default for the dev env, for M1+ Macs
    runtimeOnly 'com.cleanroommc:osxnarratorblocker:1.0'

    // JEI/HEI
    implementation rfg.deobf('curse.maven:had-enough-items-557549:4810661')
    // CraftTweaker bundle
    // CraftTweaker mod is optional dependency.
    runtimeOnly rfg.deobf('CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.20.703')
    implementation rfg.deobf('CraftTweaker2:CraftTweaker2-API:4.1.20.703')
    implementation rfg.deobf('CraftTweaker2:ZenScript:4.1.20.703')
	// Hard Dependencies
    // New SJAP will be built on official SlashBlade and contain all the direct modifications to it
    implementation rfg.deobf('curse.maven:slashblade-241596:3039993')
    implementation rfg.deobf('curse.maven:mysterious-mountain-lib-368098:3254750')
    implementation rfg.deobf('curse.maven:sakura-333079:3254753')
    // Optional Mod Dependencies
    compileOnly rfg.deobf('curse.maven:baubles-227083:2518667')
    compileOnly rfg.deobf('curse.maven:patchouli-306770:3162874')
    compileOnly rfg.deobf('curse.maven:botania-225643:3330934')
    compileOnly rfg.deobf('curse.maven:thaumcraft-223628:2629023')
    compileOnly rfg.deobf('curse.maven:the-twilight-forest-227639:3051450')

    // Example - Dependency descriptor:
    // 'com.google.code.gson:gson:2.8.6' << group: com.google.code.gson, name:gson, version:2.8.6
    // 'group:name:version:classifier' where classifier is optional

    // Example - Deobfuscating dependencies:
    // rfg.deobf('curse.maven:had-enough-items-557549:4543375')
    // By wrapping a dependency descriptor in rfg.deobf() method call, the dependency is queued for deobfuscation
    // When deobfuscating, RFG respects the mapping_channel + mapping_version stated in gradle.properties

    // Example - CurseMaven dependencies:
    // 'curse.maven:had-enough-items-557549:4543375' << had-enough-items = project slug, 557549 = project id, 4543375 = file id
    // Full documentation: https://cursemaven.com/

    // Example - Modrinth dependencies:
    // 'maven.modrinth:jei:4.16.1.1000' << jei = project name, 4.16.1.1000 = file version
    // Full documentation: https://docs.modrinth.com/docs/tutorials/maven/

    // Common dependency types (configuration):
    // implementation = dependency available at both compile time and runtime
    // runtimeOnly = runtime dependency
    // compileOnly = compile time dependency
    // annotationProcessor = annotation processing dependencies
    // embed = bundle dependencies into final output artifact (no relocation)

    // Transitive dependencies:
    // (Dependencies that your dependency depends on)
    // If you wish to exclude transitive dependencies in the described dependencies
    // Use a closure as such:
    // implementation ('com.google.code.gson:gson:2.8.6') {
    //     transitive = false
    // }
}